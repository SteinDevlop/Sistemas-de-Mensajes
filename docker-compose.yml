services:
  # ==========================
  # üêá RabbitMQ (mensajer√≠a)
  # ==========================
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  # ==========================
  # üêò PostgreSQL (base de datos)
  # ==========================
  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # ==========================
  # üß∞ Adminer (UI para PostgreSQL)
  # ==========================
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  # ==========================
  # üå§ Producer (env√≠a datos)
  # ==========================
  producer:
    build: ./producers
    container_name: producer
    environment:
      - RABBIT_USER=${RABBIT_USER}
      - RABBIT_PASS=${RABBIT_PASS}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_EXCHANGE=weather_exchange
      - ROUTING_KEY=weather.data
    depends_on:
      - rabbitmq
    restart: on-failure

  # ==========================
  # üå¶ Consumer (recibe y guarda)
  # ==========================
  consumer:
    build: ./consumers
    container_name: consumer
    environment:
      - RABBIT_USER=${RABBIT_USER}
      - RABBIT_PASS=${RABBIT_PASS}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_EXCHANGE=weather_exchange
      - RABBITMQ_QUEUE=weather_queue
      - ROUTING_KEY=weather.data
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      - rabbitmq
      - db
    restart: on-failure

# ==========================
# Vol√∫menes persistentes
# ==========================
volumes:
  rabbitmq_data:
  postgres_data: